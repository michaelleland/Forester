<div class="grid_10" id="owner_receipt_selector">
	<h4>Create receipts for payments: </h4>
	<h5>First, select the payments:</h5>
	<form method="get" action="/get_payments_receipt" target="_blank">		
		
		<div id="payments_to_receipt">
			<select id="payments_select" name="payments[]" multiple="true" size="6">
				<% unless PaymentFromDestination.all.length == 0 %>
					<% PaymentFromDestination.find(:all, :order => "payment_date").each do |i| %>
						<option value="<%= i.id %>"><%= "#{i.payment_date} | From #{Destination.find(i.destination_id).name} | #{Job.find(i.job_id).name} | #{i.total_payment}" %></option>
					<% end %>
				<% else %>
					<option value="0">No payments in database</option>
				<% end %>
			</select>
		</div>
		
		<input id="submit" type="submit" value="Create receipt" />		
	</form>	
</div>

<script>

function import_jobs(owner_id) {
	$.ajax ({
		url: '/import_jobs/'+owner_id,
		cache: false,
		success: function (html) {
			$('#job_selector').html(html);
			$('#payments_to_receipt select').html('<option value="0">No job selected</option>');
			$('#submit').attr('disabled', 'disabled');
			$('#submit').attr('value', 'No payments selected');
		}		
	})
}

$('#payments_select').change(function() {
	if ($(this).val() != '0') {
		var enabled = true
		$('#payments_select option:selected').each(function() {
			if ($(this).text().indexOf('paid') != -1) {
				enabled = false;
				$('#submit').attr('disabled', 'disabled');
				$('#submit').attr('value', 'No payments selected');
				return false;
			}			
		});
		
		if (enabled) {
			$('#submit').removeAttr('disabled');
			$('#submit').attr('value', 'Create receipt');
		}		
	} else {
		$('#submit').attr('disabled', 'disabled');
		$('#submit').attr('value', 'No payments selected');
	}
});

function add_new_deduction() {
	var data = $('#deduction_data').attr('value');
	var value = $('#deduction_value').attr('value');
	var id = parseInt($('#deductions_list').children().first().attr('value'), 10);
	
	if (String(id) == "NaN") {
		id = 1;
	} else {
		id = id +1;
	}
	
	$('#deductions_list').append('<option value="'+id+'">'+data+'</option>');
	$('#deductions_values').append('<option value="'+value+'"> $ '+value+'</option>');
	$('#deduction_data').attr('value', '');
	$('#deduction_value').attr('value', '');

}

function add_deduction () {	
	$('#deductions_select_list option:selected').each(function() {
		var value = $(this).attr('value');
		$('#deductions_select').append('<option value="'+value+'">'+$(this).html()+'</option>');
		$('#deductions_select_list').children().each(function() { 
			if ($(this).attr('value') == value) {
				$(this).remove();
			} 
		});
	});
	
	
	/* var value = $('#deductions_select_list').val();
	 * $('#deductions_select').append('<option value="'+value+'">'+$('#deductions_select_list option:selected').text()+'</option>')
	 * $('#deductions_select_list').children().each(function(){ if ($(this).attr('value') == value) { $(this).remove(); } });
	*/
	
}

function remove_deduction () {	
	$('#deductions_select option:selected').each(function() {
		var value = $(this).attr('value');
		$('#deductions_select_list').append('<option value="'+value+'">'+$(this).html()+'</option>');
		$('#deductions_select').children().each(function() { 
			if ($(this).attr('value') == value) {
				$(this).remove();
			} 
		});
	});
}

function refresh_payments(id) {
	$.ajax ({
		url: '/get_payments/'+id,
		cache: false,
		success: function (html) {
			$('#payments_to_receipt select').html(html);
		}		
	})
}

function select_all_deductions() {
	var vals = []
	$('#deductions_list option').each(function () {
		vals.push(parseInt($(this).attr('value')));
	})
	$('#deductions_list').val(vals);
	
	vals = []
	$('#deductions_values option').each(function () {
		vals.push(parseInt($(this).attr('value')));
	})
	$('#deductions_values').val(vals);
}
</script>
